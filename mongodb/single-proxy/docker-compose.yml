version: "3.9"

services:
  reverse-proxy:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      - --api
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.network=traefik-mongod
      - --providers.docker.exposedbydefault=false
      - --entrypoints.mongo.address=:27017
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --log.level=DEBUG
      - --certificatesresolvers.le.acme.email=example@gmail.com
      - --certificatesresolvers.le.acme.storage=./acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
    networks:
      - traefik-mongod
    ports:
      - 27017:27017/tcp
      - 8080:8080/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme.json:/acme.json

  mongo:
    container_name: mongo
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root123Passw0rD
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.mongo.rule=HostSNI(`*`)
      - traefik.tcp.routers.mongo.tls=true
      - traefik.tcp.routers.mongo.entrypoints=mongo
      - traefik.tcp.services.mongo.loadbalancer.server.port=27017
    volumes:
      # create volume
      - mongodb_traefik_data_container:/data
    networks:
      - traefik-mongod
    expose:
      - 27017/tcp
    # healthcheck:
    #   test: echo 'db.stats().ok' | mongo localhost:27017/test --quiet
    #   interval: 10s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 30s

volumes:
  mongodb_traefik_data_container:
    external: false
    labels:
      author: "Brian Vo"
      description: "mongo database"

networks:
  traefik-mongod:
    external: true
